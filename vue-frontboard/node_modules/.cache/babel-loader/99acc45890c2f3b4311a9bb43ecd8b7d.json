{"ast":null,"code":"export default {\n  data() {\n    return {\n      requestBody: this.$route.query,\n      idx: this.$route.query.idx,\n      title: '',\n      author: '',\n      contents: '',\n      created_at: ''\n    };\n  },\n\n  mounted() {\n    this.fnGetView();\n  },\n\n  methods: {\n    fnGetView() {\n      if (this.idx !== undefined) {\n        this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\n          params: this.requestBody\n        });\n      }\n    },\n\n    fnList() {\n      delete this.requestBody.idx;\n      this.$router.push({\n        path: './list',\n        query: this.requestBody\n      });\n    },\n\n    fnView(idx) {\n      this.requestBody = idx;\n      this.$router.push({\n        path: './detail',\n        quert: this.requestBody\n      });\n    },\n\n    fnSave() {\n      let apiUrl = this.$serverUrl + './board'; // data setting\n\n      this.form = {\n        \"idx\": this.idx,\n        \"title\": this.title,\n        \"contents\": this.contents,\n        \"author\": this.author\n      };\n\n      if (this.idx === undefined) {\n        // INSERT\n        this.$axios.post(apiUrl, this.form).then(res => {\n          alert('글이 저장되었습니다.');\n          this.fnView(res.data.idx);\n        }).catch(err => {\n          if (err.message.indexOf('Network Error') > -1) {\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n          }\n        });\n      } else {\n        //UPDATE\n        this.$axios.patch(apiUrl, this.form).then(res => {\n          alert('글이 저장되었습니다.');\n          this.fnView(res.data.idx);\n        }).catch(err => {\n          if (err.message.indexOf('Network Error') > -1) {\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n          }\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqBE,eAAe;EACbA,IAAI,GAAE;IACJ,OAAO;MACLC,WAAW,EAAE,KAAKC,MAAL,CAAYC,KADpB;MAELC,GAAG,EAAE,KAAKF,MAAL,CAAYC,KAAZ,CAAkBC,GAFlB;MAILC,KAAK,EAAC,EAJD;MAKLC,MAAM,EAAE,EALH;MAMLC,QAAQ,EAAE,EANL;MAOLC,UAAU,EAAE;IAPP,CAAP;EASD,CAXY;;EAabC,OAAO,GAAE;IACP,KAAKC,SAAL;EACD,CAfY;;EAiBbC,OAAO,EAAE;IACPD,SAAS,GAAE;MACT,IAAG,KAAKN,GAAL,KAAaQ,SAAhB,EAA0B;QACxB,KAAKC,MAAL,CAAYC,GAAZ,CAAgB,KAAKC,UAAL,GAAkB,SAAlB,GAA8B,KAAKX,GAAnD,EAAwD;UACtDY,MAAM,EAAE,KAAKf;QADyC,CAAxD;MAGF;IACD,CAPM;;IASPgB,MAAM,GAAE;MACN,OAAO,KAAKhB,WAAL,CAAiBG,GAAxB;MACA,KAAKc,OAAL,CAAaC,IAAb,CAAkB;QAChBC,IAAI,EAAE,QADU;QAEhBjB,KAAK,EAAE,KAAKF;MAFI,CAAlB;IAID,CAfM;;IAgBPoB,MAAM,CAACjB,GAAD,EAAK;MACT,KAAKH,WAAL,GAAmBG,GAAnB;MACA,KAAKc,OAAL,CAAaC,IAAb,CAAkB;QAChBC,IAAI,EAAE,UADU;QAEhBE,KAAK,EAAE,KAAKrB;MAFI,CAAlB;IAID,CAtBM;;IAuBPsB,MAAM,GAAE;MACN,IAAIC,MAAK,GAAI,KAAKT,UAAL,GAAkB,SAA/B,CADM,CAGN;;MACA,KAAKU,IAAL,GAAY;QACV,OAAO,KAAKrB,GADF;QAEV,SAAS,KAAKC,KAFJ;QAGV,YAAY,KAAKE,QAHP;QAIV,UAAU,KAAKD;MAJL,CAAZ;;MAOA,IAAG,KAAKF,GAAL,KAAaQ,SAAhB,EAA0B;QACxB;QACA,KAAKC,MAAL,CAAYa,IAAZ,CAAiBF,MAAjB,EAAyB,KAAKC,IAA9B,EACCE,IADD,CACOC,GAAD,IAAS;UACbC,KAAK,CAAC,aAAD,CAAL;UACA,KAAKR,MAAL,CAAYO,GAAG,CAAC5B,IAAJ,CAASI,GAArB;QACD,CAJD,EAIG0B,KAJH,CAIUC,GAAD,IAAS;UAChB,IAAIA,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,eAApB,IAAuC,CAAC,CAA5C,EAA8C;YAC5CJ,KAAK,CAAC,mCAAD,CAAL;UACF;QACD,CARD;MASF,CAXA,MAWO;QACL;QACA,KAAKhB,MAAL,CAAYqB,KAAZ,CAAkBV,MAAlB,EAA0B,KAAKC,IAA/B,EACCE,IADD,CACOC,GAAD,IAAS;UACbC,KAAK,CAAC,aAAD,CAAL;UACA,KAAKR,MAAL,CAAYO,GAAG,CAAC5B,IAAJ,CAASI,GAArB;QACD,CAJD,EAIG0B,KAJH,CAIUC,GAAD,IAAS;UAChB,IAAGA,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,eAApB,IAAuC,CAAC,CAA3C,EAA6C;YAC3CJ,KAAK,CAAC,mCAAD,CAAL;UACF;QACD,CARD;MASF;IACF;;EAzDO;AAjBI,CAAf","names":["data","requestBody","$route","query","idx","title","author","contents","created_at","mounted","fnGetView","methods","undefined","$axios","get","$serverUrl","params","fnList","$router","push","path","fnView","quert","fnSave","apiUrl","form","post","then","res","alert","catch","err","message","indexOf","patch"],"sourceRoot":"","sources":["/Users/yunbyeong-u/java_project/self-study/vue-Project/vue-frontboard/src/views/board/BoardWrite.vue"],"sourcesContent":["<template>\n  <div class=\"doard-detail\">\n    <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnSave\">저장</button>&nbsp;\n    <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>\n  </div>\n  <div class=\"board-contents\">\n    <input type=\"text\" v-model=\"title\" class=\"w3-input w3-board\" placeholder=\"제목을 입력해주세요.\"/>\n    <input type=\"text\" v-model=\"author\" class=\"w3-input w3-board\" placeholder=\"작성자를 입력해주세요.\" v-if=\"idx === undefined\"/>\n  </div>\n  <div class=\"board-contents\">\n    <textarea id=\"\" cols=\"30\" rows=\"10\" v-model=\"contents\" class=\"w3-input w3-board\" style=\"resize: none;\"></textarea>\n    <p>{{$data.requestBody}}</p>\n    <p>{{$data.idx}}</p>\n  </div>\n  <div class=\"common-buttons\">\n    <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnSave\">저장</button>&nbsp;\n    <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">저장</button>\n  </div>\n</template>\n\n<script>\n  export default {\n    data(){\n      return {\n        requestBody: this.$route.query,\n        idx: this.$route.query.idx,\n\n        title:'',\n        author: '',\n        contents: '',\n        created_at: ''\n      }\n    },\n\n    mounted(){\n      this.fnGetView()\n    },\n\n    methods: {\n      fnGetView(){\n        if(this.idx !== undefined){\n          this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\n            params: this.requestBody\n          })\n        }\n      },\n\n      fnList(){\n        delete this.requestBody.idx\n        this.$router.push({\n          path: './list',\n          query: this.requestBody\n        })\n      },\n      fnView(idx){\n        this.requestBody = idx\n        this.$router.push({\n          path: './detail',\n          quert: this.requestBody\n        })\n      },\n      fnSave(){\n        let apiUrl = this.$serverUrl + './board'\n\n        // data setting\n        this.form = {\n          \"idx\": this.idx,\n          \"title\": this.title,\n          \"contents\": this.contents,\n          \"author\": this.author\n        }\n\n        if(this.idx === undefined){\n          // INSERT\n          this.$axios.post(apiUrl, this.form)\n          .then((res) => {\n            alert('글이 저장되었습니다.')\n            this.fnView(res.data.idx)\n          }).catch((err) => {\n            if (err.message.indexOf('Network Error') > -1){\n              alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n            }\n          })\n        } else {\n          //UPDATE\n          this.$axios.patch(apiUrl, this.form)\n          .then((res) => {\n            alert('글이 저장되었습니다.')\n            this.fnView(res.data.idx)\n          }).catch((err) => {\n            if(err.message.indexOf('Network Error') > -1){\n              alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n            }\n          })\n        }\n      }\n    }\n  }\n\n</script>\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}