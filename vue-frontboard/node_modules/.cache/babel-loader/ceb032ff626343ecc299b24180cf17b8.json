{"ast":null,"code":"export default {\n  data() {\n    return {\n      requestBody: {},\n      //리스트 페이지 데이터전송\n      list: {},\n      //리스트 데이터\n      no: '',\n      //게시판 숫자처리\n      paging: {\n        block: 0,\n        end_page: 0,\n        next_block: 0,\n        page: 0,\n        page_size: 0,\n        prev_block: 0,\n        start_index: 0,\n        start_page: 0,\n        total_block_cnt: 0,\n        total_list_cnt: 0,\n        total_page_cnt: 0\n      },\n      page: this.$route.query.page ? this.$route.query.page : 1,\n      size: this.$route.query.size ? this.$route.query.size : 10,\n      keyword: this.$route.query.keyword,\n      paginavigation: function () {\n        //페이징 처리 for문 커스텀\n        let pageNumber = []; //;\n\n        let start_page = this.paging.start_page;\n        let end_page = this.paging.end_page;\n\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\n\n        return pageNumber;\n      }\n    };\n  },\n\n  mounted() {\n    this.fnGetList();\n  },\n\n  methods: {\n    fnGetList() {\n      this.requestBody = {\n        keyword: this.keyword,\n        page: this.page,\n        size: this.size\n      };\n      this.$axios.get(this.$serverUrl + \"/board/list\", {\n        params: this.requestBoey,\n        headers: {}\n      }).then(res => {\n        this.list = res.data; // 서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있음.\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA+CA,eAAc;EACZA,IAAI,GAAE;IACJ,OAAO;MACLC,WAAW,EAAE,EADR;MACY;MACjBC,IAAI,EAAE,EAFD;MAEK;MACVC,EAAE,EAAE,EAHC;MAGG;MACRC,MAAM,EAAE;QACNC,KAAK,EAAE,CADD;QAENC,QAAQ,EAAE,CAFJ;QAGNC,UAAU,EAAE,CAHN;QAINC,IAAI,EAAE,CAJA;QAKNC,SAAS,EAAE,CALL;QAMNC,UAAU,EAAE,CANN;QAONC,WAAW,EAAE,CAPP;QAQNC,UAAU,EAAE,CARN;QASNC,eAAe,EAAE,CATX;QAUNC,cAAc,EAAE,CAVV;QAWNC,cAAc,EAAE;MAXV,CAJH;MAiBLP,IAAI,EAAE,KAAKQ,MAAL,CAAYC,KAAZ,CAAkBT,IAAlB,GAAyB,KAAKQ,MAAL,CAAYC,KAAZ,CAAkBT,IAA3C,GAAiD,CAjBlD;MAkBLU,IAAI,EAAE,KAAKF,MAAL,CAAYC,KAAZ,CAAkBC,IAAlB,GAAyB,KAAKF,MAAL,CAAYC,KAAZ,CAAkBC,IAA3C,GAAkD,EAlBnD;MAmBLC,OAAO,EAAE,KAAKH,MAAL,CAAYC,KAAZ,CAAkBE,OAnBtB;MAoBLC,cAAc,EAAE,YAAY;QAAE;QAC5B,IAAIC,UAAS,GAAI,EAAjB,CAD0B,CACN;;QACpB,IAAIT,UAAS,GAAI,KAAKR,MAAL,CAAYQ,UAA7B;QACA,IAAIN,QAAO,GAAI,KAAKF,MAAL,CAAYE,QAA3B;;QACA,KAAK,IAAIgB,IAAIV,UAAb,EAAyBU,KAAKhB,QAA9B,EAAwCgB,CAAC,EAAzC,EAA6CD,UAAU,CAACE,IAAX,CAAgBD,CAAhB;;QAC7C,OAAOD,UAAP;MACF;IA1BK,CAAP;EA4BD,CA9BW;;EA+BZG,OAAO,GAAE;IACP,KAAKC,SAAL;EACD,CAjCW;;EAkCZC,OAAO,EAAE;IACPD,SAAS,GAAE;MACT,KAAKxB,WAAL,GAAmB;QACjBkB,OAAO,EAAE,KAAKA,OADG;QAEjBX,IAAI,EAAE,KAAKA,IAFM;QAGjBU,IAAI,EAAE,KAAKA;MAHM,CAAnB;MAKA,KAAKS,MAAL,CAAYC,GAAZ,CAAgB,KAAKC,UAAL,GAAkB,aAAlC,EAAiD;QAC/CC,MAAM,EAAE,KAAKC,WADkC;QAE/CC,OAAO,EAAE;MAFsC,CAAjD,EAGGC,IAHH,CAGSC,GAAD,IAAS;QACf,KAAKhC,IAAL,GAAYgC,GAAG,CAAClC,IAAhB,CADe,CACM;MACtB,CALD,EAKGmC,KALH,CAKUC,GAAD,IAAS;QAChB,IAAIA,GAAG,CAACC,OAAJ,CAAYC,OAAZ,CAAoB,eAApB,IAAuC,CAAC,CAA5C,EAA8C;UAC5CC,KAAK,CAAC,mCAAD,CAAL;QACF;MACD,CATD;IAUF;;EAjBO;AAlCG,CAAd","names":["data","requestBody","list","no","paging","block","end_page","next_block","page","page_size","prev_block","start_index","start_page","total_block_cnt","total_list_cnt","total_page_cnt","$route","query","size","keyword","paginavigation","pageNumber","i","push","mounted","fnGetList","methods","$axios","get","$serverUrl","params","requestBoey","headers","then","res","catch","err","message","indexOf","alert"],"sourceRoot":"","sources":["/Users/yunbyeong-u/java_project/self-study/vue-Project/vue-frontboard/src/views/board/BoardList.vue"],"sourcesContent":["<template>\n  <div class=\"board-list\">\n    <div class=\"common-buttons\">\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\"\n        v-on:click=\"fnWrite\">등록</button>\n    </div>\n    <table class=\"w3-table-all\">\n      <thead>\n      <tr>\n        <td>No</td>\n        <td>제목</td>\n        <td>작성자</td>\n        <td>등록일시</td>\n      </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"(row, idx) in list\" :key=\"idx\">\n        <td>{{row.idx}}</td>\n        <td><a v-on:click=\"fnView(`${row.idx}`)\">{{row.title}}</a></td>\n        <td>{{row.author}}</td>\n        <td>{{row.created_at}}</td>\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"pagination w3-bar w3-padding-16 w3-small\"\n      v-if=\"paging.total_list_cnt > 0 \">\n      <span class=\"pg\">\n        <a href=\"javascript:;\" @click=\"fnPage(1)\" class=\"first w3-button w3-border\">&lt;&lt;</a>\\\n        <a href=\"javascript:;\" v-if=\"paging.start_page > 10\" @click=\"fnPage(`${paging.start_page-1}`)\"\n         class=\"prev w3-button w3-border\">&lt;</a>\n        <template v-for=\" (n,index) in paginavigation()\">\n          <template v-if=\"paging.page==n\">\n              <strong class=\"w3-button w3-border w3-green\" :key=\"index\">{{ n }}</strong>\n          </template>\n          <template v-else>\n              <a class=\"w3-button w3-border\" href=\"javascript:;\" @click=\"fnPage(`${n}`)\" :key=\"index\">{{ n }}</a>\n          </template>\n        </template>\n        <a href=\"javascript:;\" v-if=\"paging.total_page_cnt > paging.end_page\"\n          @click=\"fnPage(`${paging.end_page+1}`)\" class=\"next w3-button w3-border\">&gt;</a>\n        <a href=\"javascript:;\" @click=\"fnPage(`${paging.total_page_cnt}`)\" class=\"last w3-button w3-border\">&gt;&gt;</a>\n      </span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default{\n  data(){\n    return {\n      requestBody: {}, //리스트 페이지 데이터전송\n      list: {}, //리스트 데이터\n      no: '', //게시판 숫자처리\n      paging: {\n        block: 0,\n        end_page: 0,\n        next_block: 0,\n        page: 0,\n        page_size: 0,\n        prev_block: 0,\n        start_index: 0,\n        start_page: 0,\n        total_block_cnt: 0,\n        total_list_cnt: 0,\n        total_page_cnt: 0,\n      },\n      page: this.$route.query.page ? this.$route.query.page: 1,\n      size: this.$route.query.size ? this.$route.query.size : 10,\n      keyword: this.$route.query.keyword,\n      paginavigation: function () { //페이징 처리 for문 커스텀\n        let pageNumber = [] //;\n        let start_page = this.paging.start_page;\n        let end_page = this.paging.end_page;\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\n        return pageNumber;\n      }\n    }\n  },\n  mounted(){\n    this.fnGetList()\n  },\n  methods: {\n    fnGetList(){\n      this.requestBody = {\n        keyword: this.keyword,\n        page: this.page,\n        size: this.size\n      }\n      this.$axios.get(this.$serverUrl + \"/board/list\", {\n        params: this.requestBoey,\n        headers: {}\n      }).then((res) => {\n        this.list = res.data // 서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있음.\n      }).catch((err) => {\n        if (err.message.indexOf('Network Error') > -1){\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      })\n    }\n  }\n}\n\n</script>"]},"metadata":{},"sourceType":"module"}